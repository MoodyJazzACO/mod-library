{
	"Mod": {
		"name": "Spell Haven",
		"author": "MoodyJazz",
		"description": "Fri, 20 Mar 2020 17:31:21 GMT",
		"titleLeft": "Spell",
		"titleRight": "Haven!",
		"subtitleLeft": "",
		"subtitleRight": ""
	},
	"Hero": {
		"MaxHealth": 150
	},
	"Choices": {
		"Options": {
			"q": [
				[
					"fireball",
					"flamestrike",
					"angleboom"
				],
				[
					"triplet",
					"difire",
					"ninefire",
					"unifire"
				],
				[
					"retractor",
					"backlash"
				],
				[
					"whip",
					"lifetear"
				],
				[
					"plasmarifle",
					"homingrefract"
				]
			],
			"w": [
				[
					"boost"
				],
				[
					"homing",
					"boomerang",
					"drain",
					"BottleRocket",
					"BallisticMissile"
				],
				[
					"gravity",
					"whirlwind",
					"liazslennus"
				],
				[
					"link",
					"grapple",
					"lasso"
				],
				[
					"lightning",
					"securitydrones"
				]
			],
			"e": [
				[
					"armor",
					"horcrux",
					"bodyarmor"
				],
				[
					"shield",
					"icewall"
				],
				[
					"saber",
					"dualSaber",
					"phasesaber"
				],
				[
					"phaseOut",
					"blaze"
				],
				[
					"meteor",
					"meteorite",
					"fraggrenade"
				]
			],
			"r": [
				[
					"empower"
				],
				[
					"supernova",
					"rocket"
				],
				[
					"bouncer",
					"repeater"
				],
				[
					"purification",
					"kamehameha",
					"blast",
					"beamosteal",
					"beamomight"
				]
			],
			"f": [
				[
					"bump",
					"scourge",
					"tiidkloul"
				],
				[
					"firespray",
					"iceBomb",
					"fusrodah"
				],
				[
					"mines",
					"bomba",
					"cherrybombs"
				],
				[
					"halo"
				]
			]
		}
	},
	"Spells": {
		"BottleRocket": {
			"id": "BottleRocket",
			"name": "Bottle Rocket",
			"description": "Follows the enemy. Low damage, but it's much faster than normal.'",
			"action": "projectile",
			"color": "#ffcba6",
			"icon": "boltSaw",
			"cooldown": 250,
			"throttle": true,
			"maxAngleDiffInRevs": 0.01,
			"projectile": {
				"density": 25,
				"radius": 0.002,
				"speed": 0.2,
				"maxTicks": 180,
				"damage": 7,
				"lifeSteal": 0.3,
				"expireOn": 13,
				"behaviours": [
					{
						"type": "homing",
						"revolutionsPerSecond": 1,
						"maxTurnProportion": 1
					}
				],
				"sound": "homing",
				"soundHit": "standard",
				"color": "#ffcba6",
				"renderers": [
					{
						"type": "bloom"
					},
					{
						"type": "projectile",
						"ticks": 30,
						"smoke": 0.9,
						"vanish": 0.75
					},
					{
						"type": "ray",
						"ticks": 10,
						"vanish": 0.75
					},
					{
						"type": "strike",
						"ticks": 30,
						"growth": 1,
						"flash": true,
						"numParticles": 5
					}
				]
			}
		},
		"BallisticMissile": {
			"id": "BallisticMissile",
			"name": "Ballistic Missile",
			"description": "Follows the enemy. Incredible damage, yet it's easier to dodge.'.",
			"action": "projectile",
			"color": "#44ffcc",
			"icon": "boltSaw",
			"cooldown": 360,
			"throttle": true,
			"maxAngleDiffInRevs": 0.01,
			"projectile": {
				"density": 25,
				"radius": 0.005,
				"speed": 0.1,
				"maxTicks": 120,
				"damage": 20,
				"lifeSteal": 0.3,
				"expireOn": 30,
				"behaviours": [
					{
						"type": "homing",
						"revolutionsPerSecond": 1,
						"maxTurnProportion": 0.95
					}
				],
				"detonate": {
					"damage": 3,
					"radius": 0.09,
					"minImpulse": 0.0004,
					"maxImpulse": 0.001,
					"renderTicks": 30
				},
				"sound": "homing",
				"soundHit": "standard",
				"color": "#eaffde",
				"renderers": [
					{
						"type": "bloom"
					},
					{
						"type": "projectile",
						"ticks": 30,
						"smoke": 0.25,
						"vanish": 0.75
					},
					{
						"type": "ray",
						"ticks": 10,
						"vanish": 0.75
					},
					{
						"type": "strike",
						"ticks": 30,
						"growth": 1,
						"flash": false,
						"numParticles": 7
					}
				]
			}
		},
		"lifetear": {
			"id": "lifetear",
			"name": "Lifetear",
			"description": "Lifetear is faster, yet weaker than Refract. It does give lifesteal, so control it.",
			"action": "focus",
			"color": "#00ff7f",
			"icon": "arcingBolt",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 90,
			"focusDelaysCooldown": false,
			"throttle": true,
			"movementProportionWhileChannelling": 1,
			"release": {},
			"releaseBehaviours": [
				{
					"type": "homing",
					"targetType": "cursor",
					"newSpeed": 0.4,
					"revolutionsPerSecond": 1,
					"redirect": true
				},
				{
					"type": "partial",
					"partialDamage": {
						"initialMultiplier": 0.5,
						"finalMultiplier": 1,
						"ticks": 60
					}
				}
			],
			"projectile": {
				"damage": 20,
				"lifeSteal": 2,
				"density": 60,
				"radius": 0.0015,
				"speed": 0.5,
				"maxTicks": 120,
				"categories": 2,
				"shieldTakesOwnership": false,
				"partialDamage": {
					"initialMultiplier": 0.5,
					"finalMultiplier": 0.5,
					"ticks": 1
				},
				"detonate": {
					"damage": 0,
					"lifeSteal": 0.3,
					"radius": 0.015,
					"minImpulse": 0,
					"maxImpulse": 0,
					"renderTicks": 15
				},
				"behaviours": [
					{
						"type": "accelerate",
						"maxSpeed": 0.4,
						"accelerationPerSecond": 0.4
					}
				],
				"sound": "scourge",
				"color": "#00ff7f",
				"renderers": [
					{
						"type": "bloom",
						"selfColor": true
					},
					{
						"type": "swirl",
						"color": "#00ff7f",
						"ticks": 30,
						"radius": 0.007,
						"particleRadius": 0.001,
						"glow": 0.05,
						"smoke": 0.3,
						"numParticles": 2,
						"loopTicks": 15,
						"vanish": 1,
						"selfColor": true
					},
					{
						"type": "projectile",
						"ticks": 1,
						"glow": 0.2,
						"selfColor": true
					},
					{
						"type": "ray",
						"ticks": 15,
						"glow": 0.2,
						"vanish": 0.25,
						"selfColor": true
					},
					{
						"type": "strike",
						"ticks": 15,
						"flash": true,
						"numParticles": 9,
						"selfColor": true
					}
				]
			}
		},
		"fraggrenade": {
			"id": "fraggrenade",
			"name": "Fragmentation Grenade",
			"description": "Hurl a grenade at your opponent, exploding on impact with anything.",
			"action": "projectile",
			"color": "#87a33b",
			"icon": "fragmentedMeteor",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 360,
			"throttle": true,
			"projectile": {
				"density": 1,
				"square": true,
				"ccd": false,
				"attractable": false,
				"swappable": false,
				"linkable": false,
				"radius": 0.018,
				"speed": 0.2,
				"speedDecayPerTick": 0.5,
				"restitution": 0,
				"minTicks": 1,
				"maxTicks": 280,
				"hitInterval": 120,
				"damage": 0,
				"shieldTakesOwnership": false,
				"categories": 6,
				"collideWith": 65519,
				"expireOn": 0,
				"sound": "meteorite",
				"color": "#87a33b",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.04
					},
					{
						"type": "projectile",
						"ticks": 12,
						"shine": 0,
						"smoke": 0.5,
						"fade": "#333"
					},
					{
						"type": "strike",
						"ticks": 12,
						"flash": true,
						"growth": 0.1
					}
				],
				"behaviours": [
					{
						"type": "spawn",
						"trigger": {
							"collideWith": 1
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"linkable": true,
							"radius": 0.009,
							"speed": 0.3,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 40,
							"hitInterval": 120,
							"damage": 8,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 65519,
							"expireOn": 0,
							"sound": "submeteorite",
							"color": "#b0bf88",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.07
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.7,
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 10,
						"spread": 1,
						"expire": true
					}
				]
			}
		},
		"ninefire": {
			"id": "ninefire",
			"name": "Ninefire",
			"description": "Each bolt of Ninefire will add another stack of 2 damage per second to your enemy. There is no limit to the number of stacks, but you must hit them with Trifire at least once every 4 seconds to keep the fire burning.",
			"action": "spray",
			"sound": "triplet",
			"color": "#ff0088",
			"icon": "tripleScratches",
			"maxAngleDiffInRevs": 0,
			"cooldown": 180,
			"throttle": true,
			"movementProportionWhileChannelling": 1,
			"numProjectilesPerTick": 4,
			"intervalTicks": 1,
			"lengthTicks": 1.5,
			"jitterRatio": 0.1,
			"projectile": {
				"density": 10,
				"radius": 0.002,
				"speed": 0.5,
				"maxTicks": 63,
				"damage": 0,
				"lifeSteal": 0.3,
				"categories": 2,
				"expireAgainstObjects": 65534,
				"sound": "triplet",
				"soundHit": "standard",
				"color": "#ff0088",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.02
					},
					{
						"type": "projectile",
						"ticks": 15,
						"smoke": 0.05,
						"vanish": 1
					},
					{
						"type": "ray",
						"ticks": 8,
						"vanish": 0.5
					},
					{
						"type": "strike",
						"ticks": 30,
						"flash": true,
						"numParticles": 2
					}
				],
				"behaviours": [
					{
						"type": "accelerate",
						"accelerationPerSecond": -0.4,
						"maxSpeed": 1
					}
				],
				"buffs": [
					{
						"type": "burn",
						"collideWith": 9,
						"against": 12,
						"stack": "fire",
						"hitInterval": 20,
						"packet": {
							"damage": 0.0023,
							"lifeSteal": 0,
							"noHit": true
						},
						"maxTicks": 240,
						"resetOnGameStart": true,
						"render": {
							"color": "#ff0088",
							"alpha": 0.049999999999999996,
							"ticks": 15,
							"emissionRadiusFactor": 1,
							"particleRadius": 0.00625,
							"shine": 0.2,
							"glow": 0.2
						}
					}
				]
			}
		},
		"bomba": {
			"id": "bomba",
			"name": "Anti-Life Bomb",
			"description": "A single bomb that explodes upon touching a person. Place it well in order to do fair damage.",
			"action": "spray",
			"sound": "mines",
			"color": "#ff009c",
			"icon": "mineExplosion",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 300,
			"throttle": true,
			"intervalTicks": 1,
			"lengthTicks": 1,
			"jitterRatio": 0.7,
			"projectile": {
				"density": 1,
				"ccd": false,
				"radius": 0.014,
				"speed": 0.5,
				"maxTicks": 270,
				"minTicks": 1,
				"damage": 0,
				"lifeSteal": 0.2,
				"hitInterval": 30,
				"categories": 2,
				"collideWith": 13,
				"sense": 2,
				"expireOn": 65519,
				"expireAgainstObjects": 65534,
				"conveyable": true,
				"destructible": {},
				"partialDamage": {
					"initialMultiplier": 0.001,
					"ticks": 7,
					"step": true
				},
				"detonate": {
					"damage": 20,
					"lifeSteal": 0.2,
					"radius": 0.025,
					"minImpulse": 0.0001,
					"maxImpulse": 0.0001,
					"renderTicks": 15
				},
				"shieldTakesOwnership": false,
				"behaviours": [
					{
						"type": "homing",
						"targetType": "cursor",
						"trigger": {
							"afterTicks": 6
						},
						"newSpeed": 0,
						"redirect": true
					},
					{
						"type": "expireOnOwnerRetreat",
						"maxDistance": 0.15,
						"trigger": {
							"afterTicks": 60
						}
					}
				],
				"sound": "mines",
				"color": "#ff009c",
				"renderers": [
					{
						"type": "bloom",
						"selfColor": true,
						"radius": 0.015
					},
					{
						"type": "projectile",
						"ticks": 1,
						"selfColor": true,
						"shine": 0,
						"glow": 0.2,
						"noPartialRadius": true
					},
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 3,
						"selfColor": true,
						"noPartialRadius": true
					}
				]
			}
		},
		"beamosteal": {
			"id": "beamosteal",
			"name": "Beam of Lifesteal",
			"description": "Unleash a beam so powerful it can wipe out a full-health enemy in seconds, and recharge your life.",
			"action": "spray",
			"sound": "kamehameha",
			"color": "#8cff00",
			"icon": "glowingHands",
			"maxAngleDiffInRevs": 0.0001,
			"chargeTicks": 18,
			"cooldown": 300,
			"throttle": true,
			"revsPerTickWhileCharging": 0,
			"revsPerTickWhileChannelling": 0.00005,
			"movementCancel": true,
			"strikeCancel": {
				"cooldownTicks": 300
			},
			"jitterRatio": 0,
			"intervalTicks": 6,
			"lengthTicks": 150,
			"projectile": {
				"density": 0.0001,
				"attractable": false,
				"radius": 0.003,
				"speed": 4,
				"maxTicks": 30,
				"damage": 4,
				"lifeSteal": 2,
				"categories": 6,
				"swappable": false,
				"destroying": true,
				"sound": "kamehameha",
				"color": "#e2ffbf",
				"renderers": [
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 60,
						"glow": 0.2,
						"bloom": 0.01
					}
				]
			}
		},
		"beamomight": {
			"id": "beamomight",
			"name": "Beam Of Might",
			"description": "Unleash a beam so powerful it can wipe out a full-health enemy in seconds, for a longer cooldown.",
			"action": "spray",
			"sound": "kamehameha",
			"color": "#44ddff",
			"icon": "glowingHands",
			"maxAngleDiffInRevs": 0.0001,
			"chargeTicks": 18,
			"cooldown": 480,
			"throttle": true,
			"revsPerTickWhileCharging": 0,
			"revsPerTickWhileChannelling": 0.00005,
			"movementCancel": true,
			"strikeCancel": {
				"cooldownTicks": 300
			},
			"interruptibleAfterTicks": 0,
			"interruptCancel": {
				"cooldownTicks": 300,
				"maxChannelingTicks": 0
			},
			"jitterRatio": 0,
			"intervalTicks": 6,
			"lengthTicks": 150,
			"projectile": {
				"density": 0.0001,
				"attractable": false,
				"radius": 0.01,
				"speed": 3,
				"maxTicks": 30,
				"damage": 9,
				"lifeSteal": 0.3,
				"categories": 6,
				"swappable": false,
				"destroying": true,
				"sound": "kamehameha",
				"color": "#ffffff",
				"renderers": [
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 60,
						"glow": 0.1,
						"bloom": 0.01
					}
				]
			}
		},
		"lasso": {
			"id": "lasso",
			"name": "Lasso",
			"description": "Hold the button to grapple. Move your cursor to swing Grapple around. Throw your enemies into the void!",
			"action": "focus",
			"color": "#f02",
			"icon": "grapple",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 300,
			"throttle": false,
			"unlink": true,
			"release": {},
			"maxChannellingTicks": 120,
			"movementProportionWhileChannelling": 1,
			"projectile": {
				"density": 1,
				"radius": 0.0025,
				"speed": 0.7,
				"maxTicks": 20,
				"damage": 6,
				"collideWith": 65533,
				"expireOn": 13,
				"expireOnMirror": true,
				"shieldTakesOwnership": false,
				"link": {
					"linkWith": 13,
					"selfFactor": 1,
					"targetFactor": 0.25,
					"impulsePerTick": 0.00002,
					"sidewaysImpulsePerTick": 0.00002,
					"massInvariant": true,
					"minDistance": 0.025,
					"maxDistance": 0.075,
					"linkTicks": 60,
					"channelling": true,
					"render": {
						"type": "link",
						"color": "#f02",
						"width": 0.0015,
						"toWidth": 0.003,
						"glow": 0.5,
						"shine": 0.25
					}
				},
				"buffs": [
					{
						"collideWith": 65535,
						"owner": true,
						"type": "glide",
						"maxTicks": 60,
						"linkOwner": true,
						"linearDampingMultiplier": 10
					},
					{
						"collideWith": 1,
						"type": "glide",
						"maxTicks": 60,
						"linkVictim": true,
						"linearDampingMultiplier": 0.9
					}
				],
				"behaviours": [
					{
						"type": "expireOnOwnerDeath"
					},
					{
						"type": "expireOnChannellingEnd"
					}
				],
				"sound": "grapple",
				"color": "#f02",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.05
					},
					{
						"type": "polygon",
						"color": "#f02",
						"numPoints": 3,
						"radiusMultiplier": 4,
						"revolutionInterval": 31,
						"ticks": 1
					},
					{
						"type": "link",
						"color": "#f02",
						"width": 0.001,
						"toWidth": 0.005,
						"glow": 0.2,
						"shine": 0.25
					}
				]
			}
		},
		"cherrybombs": {
			"id": "cherrybombs",
			"name": "Cherry Bombs",
			"description": "Mark out your territory with some Energy Mines. If you walk away from the mines, they expire. Energy mines only do damage after 0.1 seconds.",
			"action": "spray",
			"sound": "mines",
			"color": "#b52b1f",
			"icon": "mineExplosion",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 300,
			"throttle": true,
			"intervalTicks": 1,
			"lengthTicks": 8,
			"jitterRatio": 0.7,
			"projectile": {
				"density": 1,
				"ccd": false,
				"radius": 0.003,
				"speed": 0.5,
				"maxTicks": 270,
				"minTicks": 1,
				"damage": 0,
				"lifeSteal": 0.3,
				"hitInterval": 30,
				"categories": 2,
				"collideWith": 13,
				"sense": 2,
				"expireOn": 65519,
				"expireAgainstObjects": 65534,
				"conveyable": true,
				"destructible": {},
				"partialDamage": {
					"initialMultiplier": 0.001,
					"ticks": 7,
					"step": true
				},
				"detonate": {
					"damage": 12,
					"lifeSteal": 0.3,
					"radius": 0.015,
					"minImpulse": 0.0001,
					"maxImpulse": 0.0001,
					"renderTicks": 15
				},
				"shieldTakesOwnership": false,
				"behaviours": [
					{
						"type": "homing",
						"targetType": "cursor",
						"trigger": {
							"afterTicks": 6
						},
						"newSpeed": 0,
						"redirect": true
					},
					{
						"type": "expireOnOwnerRetreat",
						"maxDistance": 6,
						"trigger": {
							"afterTicks": 90
						}
					}
				],
				"sound": "mines",
				"color": "#b52b1f",
				"renderers": [
					{
						"type": "bloom",
						"selfColor": true,
						"radius": 0.015
					},
					{
						"type": "projectile",
						"ticks": 1,
						"selfColor": true,
						"shine": 0,
						"glow": 0.2,
						"noPartialRadius": true
					},
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 3,
						"selfColor": true,
						"noPartialRadius": true
					}
				]
			}
		},
		"fusrodah": {
			"id": "fusrodah",
			"name": "Fus Ro Dah!",
			"description": "Shout in the ancient tongue of dragons!",
			"action": "spray",
			"sound": "iceBomb",
			"color": "#44ffff",
			"icon": "frostfire",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 540,
			"throttle": true,
			"numProjectilesPerTick": 12,
			"intervalTicks": 1,
			"lengthTicks": 3,
			"jitterRatio": 0.6,
			"projectile": {
				"density": 13,
				"sensor": false,
				"ccd": false,
				"restitution": 0,
				"radius": 0.01,
				"speed": 2,
				"maxTicks": 30,
				"minTicks": 1,
				"damage": 0,
				"noKnockback": false,
				"swappable": false,
				"attractable": false,
				"categories": 2,
				"collideWith": 65519,
				"expireOn": 20,
				"shieldTakesOwnership": false,
				"sound": "iceBomb",
				"color": "#44ffff",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.015
					},
					{
						"type": "projectile",
						"ticks": 40,
						"color": "rgba(64, 255, 255, 0.25)",
						"shine": 0.4,
						"smoke": 0.3,
						"vanish": 1
					},
					{
						"type": "strike",
						"ticks": 10,
						"flash": true,
						"growth": 0.1
					}
				]
			}
		},
		"liazslennus": {
			"id": "liazslennus",
			"name": "Liaz Slen Nus",
			"description": "Freeze your enemies with the power of the dragon.",
			"effects": [
				{
					"icon": "fas fa-snowflake",
					"title": "Slow",
					"text": "Enemies caught in your freezing breath will be slowed 50% for 2 seconds."
				}
			],
			"action": "projectile",
			"color": "#44ffff",
			"icon": "snowflake1",
			"sound": "whirlwind",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 450,
			"throttle": true,
			"chargeTicks": 6,
			"projectile": {
				"categories": 4,
				"ccd": false,
				"density": 0.0001,
				"radius": 0.05,
				"speed": 0.45,
				"maxTicks": 120,
				"damage": 5,
				"collideWith": 1,
				"expireOn": 0,
				"swappable": false,
				"sensor": true,
				"noKnockback": true,
				"hitInterval": 15,
				"behaviours": [
					{
						"type": "attract",
						"collideLike": 4,
						"categories": 2,
						"against": 12,
						"radius": 0.1,
						"accelerationPerTick": 0.1,
						"clampSpeed": 0.4
					}
				],
				"buffs": [
					{
						"type": "movement",
						"stack": "whirlwind",
						"movementProportion": 0.003,
						"maxTicks": 120,
						"against": 12,
						"render": {
							"color": "rgba(64, 255, 255, 1)",
							"alpha": 0.3,
							"ticks": 15,
							"emissionRadiusFactor": 1,
							"particleRadius": 0.01,
							"shine": 0.2,
							"glow": 0.2,
							"bloom": 0.03
						}
					}
				],
				"sound": "whirlwind",
				"color": "#44ffff",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.05
					},
					{
						"type": "swirl",
						"color": "rgba(64, 255, 255, 0.25)",
						"radius": 0.06,
						"ticks": 20,
						"loopTicks": 13,
						"numParticles": 2,
						"particleRadius": 0.02,
						"shine": 0.3,
						"smoke": 1.9,
						"fade": "#144",
						"vanish": 1
					},
					{
						"type": "strike",
						"ticks": 20,
						"flash": true,
						"growth": 0.2
					}
				]
			}
		},
		"tiidkloul": {
			"id": "tiidkloul",
			"name": "Tiid Klo Ul",
			"description": "Use the power of the dragons to stop time for a shortened period of time.",
			"untargeted": true,
			"movementCancel": true,
			"effects": [
				{
					"icon": "fas fa-weight-hanging",
					"title": "Heavy",
					"text": "Knockback reduced 75% while overloading."
				},
				{
					"icon": "fas fa-clock",
					"title": "Recharge",
					"text": "Each enemy you hit reduces cooldowns for all your spells except Tiid Klo Ul by 3 seconds."
				}
			],
			"chargeBuffs": [
				{
					"type": "mass",
					"maxTicks": 30,
					"channelling": true,
					"radius": 0.0125,
					"density": 2.16
				},
				{
					"type": "glide",
					"maxTicks": 30,
					"channelling": true,
					"linearDampingMultiplier": 4
				}
			],
			"detonate": {
				"damage": 0,
				"radius": 3,
				"minImpulse": 0,
				"maxImpulse": 0,
				"renderTicks": 30,
				"buffs": [
					{
						"type": "movement",
						"stack": "scourge",
						"movementProportion": 0.003,
						"maxTicks": 120,
						"against": 12,
						"render": {
							"color": "rgba(64, 255, 255, 1)",
							"alpha": 0.3,
							"ticks": 15,
							"emissionRadiusFactor": 1,
							"particleRadius": 0.01,
							"shine": 0.2,
							"glow": 0.2,
							"bloom": 0.03
						}
					}
				]
			},
			"chargeTicks": 120,
			"cooldown": 775,
			"throttle": false,
			"unlink": true,
			"interruptibleAfterTicks": 1,
			"interruptCancel": {
				"cooldownTicks": 775
			},
			"selfDamage": 0,
			"minSelfHealth": 1,
			"icon": "deadlyStrike",
			"trailTicks": 30,
			"color": "#ffcc00",
			"sound": "scourge",
			"action": "scourge"
		},
		"vengaarnos": {
			"id": "vengaarnos",
			"name": "Ven Gaar Nos",
			"description": "Use the power of the atmosphere and dragons to hurl your enemies into nothingness.",
			"effects": [
				{
					"icon": "fas fa-snowflake",
					"title": "Slow",
					"text": "Enemies caught in your freezing breath will be slowed 50% for 2 seconds."
				}
			],
			"action": "projectile",
			"color": "#383838",
			"icon": "snowflake1",
			"sound": "whirlwind",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 450,
			"throttle": true,
			"chargeTicks": 6,
			"projectile": {
				"categories": 4,
				"ccd": false,
				"density": 0.0001,
				"radius": 0.4,
				"speed": 0.1,
				"maxTicks": 120,
				"damage": 6,
				"collideWith": 1,
				"expireOn": 0,
				"swappable": false,
				"sensor": true,
				"noKnockback": true,
				"hitInterval": 15,
				"behaviours": [
					{
						"type": "attract",
						"collideLike": 4,
						"categories": 2,
						"against": 12,
						"radius": 0.04,
						"accelerationPerTick": 0.1,
						"clampSpeed": 0.4
					}
				],
				"buffs": [
					{
						"type": "movement",
						"stack": "whirlwind",
						"movementProportion": 0.5,
						"maxTicks": 120,
						"against": 12,
						"render": {
							"color": "rgba(64, 255, 255, 1)",
							"alpha": 0.3,
							"ticks": 15,
							"emissionRadiusFactor": 1,
							"particleRadius": 0.01,
							"shine": 0.2,
							"glow": 0.2,
							"bloom": 0.03
						}
					}
				],
				"sound": "whirlwind",
				"color": "#383838",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.05
					},
					{
						"type": "swirl",
						"color": "rgba(64, 255, 255, 0.25)",
						"radius": 0.01,
						"ticks": 20,
						"loopTicks": 13,
						"numParticles": 2,
						"particleRadius": 0.02,
						"shine": 0.2,
						"smoke": 1.3,
						"fade": "#144",
						"vanish": 1
					},
					{
						"type": "strike",
						"ticks": 20,
						"flash": true,
						"growth": 0.1
					}
				]
			}
		},
		"unifire": {
			"id": "unifire",
			"name": "Unifire",
			"description": "Each bolt of Unifire does a certain amount of damage to the target, including the burn. Shoot them constantly to keep the fire burning.",
			"action": "spray",
			"color": "#ff0088",
			"icon": "crossedSlashes",
			"sound": "triplet",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 180,
			"throttle": true,
			"movementProportionWhileChannelling": 1,
			"numProjectilesPerTick": 1,
			"intervalTicks": 1,
			"lengthTicks": 1,
			"jitterRatio": 1,
			"projectile": {
				"density": 7,
				"radius": 0.0055,
				"speed": 1,
				"maxTicks": 90,
				"damage": 0,
				"lifeSteal": 0.3,
				"categories": 2,
				"expireAgainstObjects": 65534,
				"sound": "triplet",
				"soundHit": "standard",
				"behaviours": [
					{
						"type": "homing",
						"targetType": "cursor",
						"trigger": {
							"afterTicks": 1
						},
						"redirect": true,
						"newSpeed": 0.66
					}
				],
				"color": "#ff0088",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.02
					},
					{
						"type": "projectile",
						"ticks": 15,
						"smoke": 0.05,
						"vanish": 1
					},
					{
						"type": "ray",
						"ticks": 8,
						"vanish": 0.5
					},
					{
						"type": "strike",
						"ticks": 8,
						"flash": true,
						"numParticles": 2
					}
				],
				"buffs": [
					{
						"type": "burn",
						"collideWith": 9,
						"against": 12,
						"stack": "fire",
						"hitInterval": 20,
						"packet": {
							"damage": 0.8333333333333334,
							"lifeSteal": 0.3,
							"noHit": true
						},
						"maxTicks": 240,
						"resetOnGameStart": true,
						"render": {
							"color": "#ff0088",
							"alpha": 0.075,
							"ticks": 15,
							"emissionRadiusFactor": 1,
							"particleRadius": 0.00625,
							"shine": 0.2,
							"glow": 0.2
						}
					}
				]
			}
		},
		"purification": {
			"id": "purification",
			"name": "Purification",
			"description": "A beam that can restore your allies health in a few seconds.'",
			"effects": [
				{
					"icon": "fas fa-hand-paper",
					"title": "Interruptible",
					"text": "If you take an enemy hit, Purification will be interrupted."
				}
			],
			"action": "spray",
			"sound": "kamehameha",
			"color": "#44ddff",
			"icon": "glowingHands",
			"maxAngleDiffInRevs": 0.0001,
			"chargeTicks": 18,
			"cooldown": 300,
			"throttle": true,
			"revsPerTickWhileCharging": 0,
			"revsPerTickWhileChannelling": 0.00005,
			"movementCancel": true,
			"strikeCancel": {
				"cooldownTicks": 300
			},
			"interruptibleAfterTicks": 0,
			"interruptCancel": {
				"cooldownTicks": 300,
				"maxChannelingTicks": 0
			},
			"jitterRatio": 0,
			"intervalTicks": 6,
			"lengthTicks": 150,
			"projectile": {
				"density": 0.0001,
				"attractable": false,
				"radius": 0.005,
				"speed": 3,
				"maxTicks": 30,
				"damage": -4,
				"lifeSteal": 0.3,
				"categories": 6,
				"swappable": false,
				"destroying": true,
				"sound": "kamehameha",
				"color": "#ffff0d",
				"renderers": [
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 60,
						"glow": 0.6,
						"bloom": 0.01
					}
				]
			}
		},
		"mulqahdiiv": {
			"id": "mulqahdiiv",
			"name": "Mul Qah Diiv",
			"description": "Passive ability. Every atom in your body is imbued with inner strength.",
			"effects": [
				{
					"icon": "fas fa-shield",
					"title": "Resistant",
					"text": "Reduce damage received by 15%. Applies to all forms of damage, including void damage."
				}
			],
			"passive": false,
			"untargeted": true,
			"cooldown": 300,
			"buffs": [
				{
					"type": "armor",
					"passive": true,
					"proportion": -0.15
				},
				{
					"type": "lifeSteal",
					"passive": true,
					"damageMultiplier": 1.15
				}
			],
			"icon": "wingedShield",
			"color": "#8800ff",
			"action": "buff"
		},
		"bodyarmor": {
			"id": "bodyarmor",
			"name": "Body Armor",
			"description": "Your entire body is covered with protective plating, protecting you, while it does slow you down a bit.",
			"effects": [
				{
					"icon": "fas fa-shield",
					"title": "Resistant",
					"text": "Reduce damage received by 15%. Applies to all forms of damage, including void damage."
				},
				{
					"icon": "fas fa-weight-hanging",
					"title": "Heavy",
					"text": "Speed reduced 5%, and knockback protection increased by 25%."
				}
			],
			"passive": true,
			"untargeted": true,
			"cooldown": 1,
			"buffs": [
				{
					"type": "armor",
					"passive": true,
					"proportion": -0.15
				},
				{
					"type": "movement",
					"movementProportion": 0.95
				},
				{
					"type": "mass",
					"radius": 1,
					"density?": 1.25
				}
			],
			"icon": "wingedShield",
			"color": "#dedede",
			"action": "buff"
		},
		"phasesaber": {
			"id": "phasesaber",
			"name": "Phasesaber",
			"description": "Use your phasesaber to attack your opponents, and detaching anything they have to you.",
			"effects": [
				{
					"icon": "fas fa-unlink",
					"title": "Detach",
					"text": "Lightsaber cuts through any Links or Grapples."
				}
			],
			"untargeted": true,
			"unlink": true,
			"takesOwnership": true,
			"blocksTeleporters": false,
			"shiftMultiplier": 0.5,
			"speedMultiplier": 2,
			"maxSpeed": 0.5,
			"maxTurnRatePerTickInRevs": 0.1,
			"damageMultiplier": 1,
			"angleOffsetsInRevs": [
				0
			],
			"width": 0.001,
			"length": 0.075,
			"movementProportionWhileChannelling": 0.5,
			"interruptibleAfterTicks": 20,
			"cooldown": 600,
			"throttle": false,
			"icon": "waveStrike",
			"maxTicks": 180,
			"channelling": true,
			"categories": 16,
			"collidesWith": 3,
			"damageTemplate": {
				"damage": 9
			},
			"hitBuffs": [
				{
					"type": "delink"
				}
			],
			"trailTicks": 20,
			"color": "#ff9ee0",
			"light": 1,
			"shine": 0.1,
			"shadow": 0.5,
			"glow": 0.3,
			"bloom": 0.03,
			"strike": {
				"ticks": 6,
				"flash": true,
				"bloom": 0.03
			},
			"sound": "saber",
			"action": "saber"
		},
		"plasmarifle": {
			"id": "plasmarifle",
			"name": "Plasma Rifle",
			"description": "Your basic, military grade plasma rifle.",
			"action": "projectile",
			"color": "#831fb5",
			"icon": "lightningHelix",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 90,
			"throttle": true,
			"chargeTicks": 6,
			"recoil": 0.2,
			"projectile": {
				"density": 1,
				"radius": 0.0025,
				"speed": 2,
				"maxTicks": 30,
				"collideWith": 65535,
				"swappable": false,
				"damage": 13,
				"sound": "repeater",
				"color": "#1c1221",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.5
					},
					{
						"type": "ray",
						"intermediatePoints": true,
						"ticks": 30,
						"vanish": 1
					},
					{
						"type": "strike",
						"ticks": 15,
						"flash": true,
						"detonate": 0.02,
						"numParticles": 5,
						"speedMultiplier": 0.2
					}
				]
			}
		},
		"homingrefract": {
			"id": "homingrefract",
			"name": "Ancient Homing Drone",
			"description": "A singular beam that when released will dart at the opponent.",
			"action": "focus",
			"color": "#00ff7f",
			"icon": "arcingBolt",
			"maxAngleDiffInRevs": 0.01,
			"cooldown": 190,
			"focusDelaysCooldown": true,
			"throttle": true,
			"movementProportionWhileChannelling": 0.5,
			"release": {},
			"releaseAfterTicks": 40,
			"releaseBehaviours": [
				{
					"type": "homing",
					"targetType": "enemy",
					"newSpeed": 0.5,
					"revolutionsPerSecond": 4,
					"redirect": true
				},
				{
					"type": "partial",
					"partialDamage": {
						"initialMultiplier": 0.5,
						"finalMultiplier": 1,
						"ticks": 60
					}
				}
			],
			"projectile": {
				"damage": 13,
				"lifeSteal": 0.3,
				"density": 0,
				"radius": 0.0035,
				"speed": 0.3,
				"maxTicks": 120,
				"categories": 2,
				"shieldTakesOwnership": false,
				"partialDamage": {
					"initialMultiplier": 0.5,
					"finalMultiplier": 0.5,
					"ticks": 1
				},
				"detonate": {
					"damage": 0,
					"lifeSteal": 0.3,
					"radius": 0.015,
					"minImpulse": 0,
					"maxImpulse": 0,
					"renderTicks": 15
				},
				"behaviours": [
					{
						"type": "accelerate",
						"maxSpeed": 0.4,
						"accelerationPerSecond": 0.4
					}
				],
				"sound": "retractor",
				"color": "#00ff7f",
				"renderers": [
					{
						"type": "bloom",
						"selfColor": true
					},
					{
						"type": "swirl",
						"color": "#00ff7f",
						"ticks": 30,
						"radius": 0.007,
						"particleRadius": 0.001,
						"glow": 0.05,
						"smoke": 0.3,
						"numParticles": 2,
						"loopTicks": 15,
						"vanish": 1,
						"selfColor": true
					},
					{
						"type": "projectile",
						"ticks": 7,
						"glow": 0.3,
						"selfColor": true
					},
					{
						"type": "ray",
						"ticks": 15,
						"glow": 0.3,
						"vanish": 0.25,
						"selfColor": true
					},
					{
						"type": "strike",
						"ticks": 15,
						"flash": true,
						"numParticles": 9,
						"selfColor": true
					}
				]
			}
		}
	},
	"Code": "var center = { x: 0.5, y: 0.5 };\n\nvar CloseEnoughDistance = 0.05;\nvar CloseEnoughRadians = 0.1 * Math.PI;\nvar MissRadius = 0.05;\nvar DodgeRadius = 0.15;\nvar SpellCastIntervalMilliseconds = 1000;\nvar SpellCastJitterMilliseconds = 500;\n\nvar TicksPerSecond = 60;\n\nvar DefaultReactionMilliseconds = 600;\nvar ReactionMillisecondsLookup = { // Change the reaction time on certain spells\n    retarget: 200,\n};\n\nvar alreadyChosenSpells = false;\nvar nextSpell = 0;\n\n// See ai.contracts.ts:\n// input is InputContract - contains information about the current state of the world\n// output is OutputContract - an action you want to take in response to the world \nfunction act(input) {\n    // Want the bot to do nothing? Uncomment the line below (remove the //):\n    // return null;\n\n    var state = input.state;\n    var heroId = input.heroId;\n    var hero = state.heroes[heroId];\n    var cooldowns = input.cooldowns;\n    var settings = input.settings;\n\n    var opponent = findOpponent(state.heroes, heroId);\n    if (!(hero && opponent)) {\n        // Either we're dead, or everyone else is, nothing to do\n        return null;\n    }\n    \n    var action = null;\n    if (state.started) {\n        action =\n            recovery(state, hero, cooldowns)\n            || dodge(state, hero, cooldowns)\n            || castSpell(state, hero, opponent, cooldowns, settings)\n            || focus(hero, opponent)\n            || chase(state, hero, cooldowns, opponent)\n            || move(state, hero)\n            || face(state, hero, opponent)\n    } else {\n        action =\n            chooseSpells(settings)\n            || dodge(state, hero, cooldowns)\n            || move(state, hero)\n            || face(state, hero, opponent)\n    }\n\n    if (action) {\n        // Give the bot a reaction time otherwise it is OP\n        var reactionMilliseconds = ReactionMillisecondsLookup[action.spellId] || DefaultReactionMilliseconds;\n        action.delayMilliseconds = reactionMilliseconds;\n        return action;\n    } else {\n        return null;\n    }\n}\n\nfunction chooseSpells(settings) {\n    if (alreadyChosenSpells) {\n        return null;\n    }\n    alreadyChosenSpells = true;\n\n    var spells = randomSpells(settings);\n\n    // Want to test a particular spell? Uncomment and edit the lines below\n    spells[\"e\"] = \"fraggrenade\";\n    spells[\"q\"] = \"ninefire\";\n\n    return { spells };\n}\n\nfunction randomSpells(settings) {\n\tvar keyBindings = {};\n\tvar allOptions = settings.Choices.Options;\n\tfor (var btn in allOptions) { // One of the buttons, e.g. Q or R\n        var options = allOptions[btn];\n\n        var spellIds = [];\n        for (var i = 0; i < options.length; ++i) {\n            var row = options[i];\n            for (var j = 0; j < row.length; ++j) {\n                var spellId = row[j];\n                spellIds.push(spellId);\n            }\n        }\n\n\t\tif (spellIds.length > 1) {\n\t\t\tkeyBindings[btn] = spellIds[Math.floor(Math.random() * spellIds.length)];\n\t\t}\n\t}\n\treturn keyBindings;\n}\n\nfunction findOpponent(heroes, myHeroId) {\n    var myHero = heroes[myHeroId];\n    if (!myHero) {\n        return null;\n    }\n\n    var choice = null;\n    var mostHealth = 0;\n    for (var heroId in heroes) {\n        var hero = heroes[heroId];\n\n        if (!hero.isEnemy) { continue; }\n\n        // Uncomment the line below to only target humans\n        // if (hero.isBot) { continue; }\n\n        if (hero.health > mostHealth) {\n            // Target the enemy with the most health\n            mostHealth = hero.health;\n            choice = hero;\n        }\n    }\n    return choice;\n}\n\nfunction recovery(state, hero, cooldowns) {\n    if (hero.inside || state.radius <= 0) {\n        // No need to recover\n        return null;\n    }\n\n    var spellId = null;\n    if (cooldowns[\"teleport\"] === 0) {\n        spellId = \"teleport\";\n    } else if (cooldowns[\"thrust\"] === 0) {\n        spellId = \"thrust\";\n    } else if (cooldowns[\"swap\"] === 0) {\n        spellId = \"swap\";\n    } else if (cooldowns[\"voidRush\"] === 0) {\n        spellId = \"voidRush\";\n    } else if (cooldowns[\"vanish\"] === 0) {\n        spellId = \"vanish\";\n    } else {\n        spellId = \"move\";\n    }\n\n    if (spellId) {\n        return { spellId, target: center };\n    }\n    return null;\n}\n\nfunction deflect(state, hero, cooldowns, projectile) {\n    var target = vectorMidpoint(hero.pos, projectile.pos);\n    var spellId = null;\n    if (cooldowns[\"shield\"] === 0) {\n        spellId = \"shield\";\n    } else if (cooldowns[\"icewall\"] === 0) {\n        spellId = \"icewall\";\n    } else if (cooldowns[\"saber\"] === 0) {\n        spellId = \"saber\";\n    } else if (cooldowns[\"dualSaber\"] === 0) {\n        spellId = \"dualSaber\";\n    } else if (cooldowns[\"meteor\"] === 0) {\n        spellId = \"meteor\";\n    } else if (cooldowns[\"meteorite\"] === 0) {\n        spellId = \"meteorite\";\n    } else if (cooldowns[\"whirlwind\"] === 0) {\n        spellId = \"whirlwind\";\n    } else if (cooldowns[\"phaseOut\"] === 0) {\n        spellId = \"phaseOut\";\n    } else {\n        spellId = null;\n    }\n\n    if (spellId) {\n        return { spellId, target };\n    } else {\n        return null;\n    }\n}\n\nfunction castSpell(state, hero, opponent, cooldowns, settings) {\n    if (!readyForNextSpell(hero)) {\n        return null;\n    }\n\n    var candidates = [];\n    for (var spellId in cooldowns) {\n        var readyToCast = !cooldowns[spellId];\n        var spell = settings.Spells[spellId];\n\n        if (spell\n            && readyToCast\n            && validAttack(state, hero, opponent, spell)) {\n\n            candidates.push(spellId);\n        }\n    }\n\n    if (candidates.length > 0) {\n        var spellId = candidates[Math.floor(Math.random() * candidates.length)];\n        var action = { spellId, target: jitter(opponent.pos, MissRadius) };\n        if (action.spellId === spellId) {\n            updateNextSpellTime();\n        }\n        return action;\n    } else {\n        return null;\n    }\n}\n\nfunction validAttack(state, hero, opponent, spell) {\n    var opponentShielded = !!opponent.shieldTicksRemaining;\n\n    var distance = vectorDistance(hero.pos, opponent.pos);\n    if (spell.action === \"projectile\" || spell.action === \"spray\" || spell.action === \"retractor\" || spell.action === \"focus\" || spell.action === \"charge\") {\n        if (spell.projectile.swapWith) { // Swap doesn't work as an attack\n            return false;\n        }\n        if (opponentShielded && !spell.projectile.detonate) { // Detonate spells can penetrate shields, nothing else can\n            return false;\n        }\n        if (spell.id === \"whip\") {\n            // Just keep casting Electroshock even if out of range\n            return true;\n        }\n\n        var range = spell.projectile.speed * spell.projectile.maxTicks / TicksPerSecond + opponent.radius;\n        return distance <= range;\n    } else if (spell.action === \"scourge\") {\n        var range = spell.radius + opponent.radius;\n        return distance <= range;\n    } else if (spell.id === \"blaze\") {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction readyForNextSpell(hero) {\n    return (\n        Date.now() >= nextSpell // Don't cast too fast\n        || !!hero.link // If linked to something, cast as many spells as possible\n    );\n}\n\nfunction updateNextSpellTime() {\n    nextSpell = Date.now() + SpellCastIntervalMilliseconds + Math.floor((Math.random() < 0.5 ? -1 : 1) * Math.random() * SpellCastJitterMilliseconds);\n}\n\nfunction jitter(target, missRadius) {\n    var radius = Math.random() * missRadius;\n    var angle = Math.random() * 2 * Math.PI;\n    return {\n        x: target.x + radius * Math.cos(angle),\n        y: target.y + radius * Math.sin(angle),\n    };\n}\n\nfunction focus(hero, opponent) { // When using a spell (e.g. Acolyte Beam, Spirit Missile) - ensure we are focusing the enemy, otherwise we will miss\n    if (hero.casting) {\n        if (hero.casting.spellId === \"blast\" || hero.casting.spellId === \"retractor\" || hero.casting.spellId === \"rocket\") {\n            // Have to release or it won't fire\n            return { spellId: hero.casting.spellId, release: true, target: opponent.pos };\n        } else if (hero.casting.spellId === \"saber\" || hero.casting.spellId === \"dualSaber\") {\n            // Don't focus the lightsaber, just swish it around\n            return { spellId: \"retarget\", target: vectorPlus(hero.pos, vectorFromAngle(hero.heading + Math.PI / 2)) };\n        } else if (hero.casting.spellId === \"grapple\") {\n            // Throw away to the right (TODO: be smarter about this)\n            return { spellId: hero.casting.spellId, release: true, target: vectorPlus(hero.pos, vectorFromAngle(hero.heading + Math.PI / 2)) };\n        } else if (hero.casting.spellId === \"halo\") {\n            return { spellId: \"move\", target: opponent.pos };\n        } else {\n            return { spellId: \"retarget\", target: opponent.pos };\n        }\n    } else {\n        return null;\n    }\n}\n\nfunction chase(state, hero, cooldowns, opponent) {\n    if (\"whip\" in cooldowns) {\n        // Got to get within range when using Electroshock\n        var target = vectorMidpoint(hero.pos, opponent.pos);\n        return { spellId: \"move\", target };\n    } else {\n        return null;\n    }\n}\n\nfunction move(state, hero) {\n    var centroid = { x: 0, y: 0 };\n    var numOpponents = 0;\n    for (var heroId in state.heroes) {\n        if (heroId === hero.id) {\n            continue; // Ignore self\n        }\n\n        var opponent = state.heroes[heroId];\n        centroid.x += opponent.pos.x;\n        centroid.y += opponent.pos.y;\n\n        ++numOpponents;\n    }\n    centroid.x /= numOpponents;\n    centroid.y /= numOpponents;\n\n    if (!numOpponents) {\n        return;\n    }\n\n    var offset = vectorNegate(vectorDiff(centroid, center)); // Move to the opposite side of the arena\n    var targetDistance = state.radius * 0.33; // Closer to center than edge (for polygonal maps)\n    var target = vectorPlus(center, vectorRelengthen(offset, targetDistance));\n\n    var distanceToTarget = vectorDistance(hero.pos, target);\n    if (distanceToTarget <= CloseEnoughDistance) {\n        // Close enough - don't send any action so the game can sleep while waiting for players\n        return null;\n    }\n\n    return { spellId: \"move\", target };\n}\n\nfunction face(state, hero, opponent) {\n    var target = opponent.pos;\n    var targetAngle = vectorAngle(vectorDiff(opponent.pos, hero.pos));\n    var angleDelta = vectorAngleDelta(hero.heading, targetAngle);\n    if (Math.abs(angleDelta) <= CloseEnoughRadians) {\n        return null;\n    }\n\n    return { spellId: \"retarget\", target };\n}\n\nfunction dodge(state, hero, cooldowns) {\n    for (var projectileId in state.projectiles) {\n        var projectile = state.projectiles[projectileId];\n        if (projectile.ownerId === hero.id) {\n            // This is my own projectile\n            continue;\n        }\n\n        if (projectile.spellId === \"halo\") {\n            // Halo is never coming for us, it orbits around its owner\n            continue;\n        }\n\n        var diff = vectorDiff(hero.pos, projectile.pos);\n        var distancePerTimeStep = vectorDot(projectile.velocity, vectorUnit(diff));\n        if (distancePerTimeStep <= 0) {\n            // Not coming towards us\n            continue;\n        }\n\n        var timeToCollision = vectorLength(diff) / distancePerTimeStep;\n        if (timeToCollision <= 0 || timeToCollision >= 30) {\n            // Not coming towards us or too far away\n            continue;\n        }\n\n        var collisionPoint = vectorPlus(projectile.pos, vectorMultiply(projectile.velocity, timeToCollision));\n        var distanceToCollision = vectorDistance(collisionPoint, hero.pos);\n        var dodgeRadius = Math.max(DodgeRadius, projectile.radius) + hero.radius;\n        if (distanceToCollision > dodgeRadius) {\n            // Won't hit us\n            continue;\n        }\n\n        var deflectAction = deflect(state, hero, cooldowns, projectile);\n        if (deflectAction) {\n            return deflectAction;\n        }\n\n        // Run away from collision point\n        var direction = vectorUnit(vectorNegate(vectorDiff(collisionPoint, hero.pos)));\n        var step = vectorMultiply(direction, dodgeRadius);\n        var target = vectorPlus(hero.pos, step);\n        return { spellId: \"move\", target };\n    }\n    return null;\n}\n\nfunction vectorDiff(to, from) {\n    return { x: to.x - from.x, y: to.y - from.y };\n}\n\nfunction vectorLength(vector) {\n    return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n}\n\nfunction vectorDistance(from, to) {\n    return vectorLength(vectorDiff(from, to));\n}\n\nfunction vectorUnit(vec) {\n    var length = vectorLength(vec);\n    return length === 0 ? vec : vectorMultiply(vec, 1 / length);\n}\n\nfunction vectorPlus(from, offset) {\n    return { x: from.x + offset.x, y: from.y + offset.y };\n}\n\nfunction vectorMultiply(vec, multiplier) {\n    return { x: vec.x * multiplier, y: vec.y * multiplier };\n}\n\nfunction vectorRelengthen(vec, length) {\n    return vectorMultiply(vectorUnit(vec), length);\n}\n\nfunction vectorNegate(vec) {\n    return vectorMultiply(vec, -1);\n}\n\nfunction vectorDot(a, b) {\n    return (a.x * b.x) + (a.y * b.y);\n}\n\nfunction vectorMidpoint(a, b) {\n    var diff = vectorDiff(b, a);\n    return vectorPlus(a, vectorMultiply(diff, 0.5));\n}\n\nfunction vectorFromAngle(angle) {\n\treturn { x: Math.cos(angle), y: Math.sin(angle) };\n}\n\nfunction vectorAngle(vec) {\n    return Math.atan2(vec.y, vec.x);\n}\n\nfunction vectorAngleDelta(currentAngle, targetAngle) {\n\tvar delta = targetAngle - currentAngle;\n\twhile (delta > Math.PI) {\n\t\tdelta -= 2 * Math.PI;\n\t}\n\twhile (delta < -Math.PI) {\n\t\tdelta += 2 * Math.PI;\n\t}\n\treturn delta;\n}\n\n// See ai.contracts.ts: Must return a BotContract\nreturn { act };"
}