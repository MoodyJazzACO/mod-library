{
	"Mod": {
		"name": "bullethell",
		"author": "meso",
		"description": "Sun, 08 Mar 2020 15:46:12 GMT",
		"titleLeft": "meso's",
		"titleRight": "Mod!",
		"subtitleLeft": "",
		"subtitleRight": ""
	},
	"Matchmaking": {
		"MaxBots": 1
	},
	"World": {
		"HeroLayoutProportion": 0.001,
		"HeroResetProportion": 0,
		"LavaDamagePerSecond": 0,
		"SecondsToShrink": 40,
		"ShrinkPowerMinPlayers": 1,
		"ShrinkPowerMaxPlayers": 1,
		"SlopRadius": 0
	},
	"ObstacleTemplates": {
		"volcano": {
			"health": 5000,
			"collideWith": 1,
			"buffs": [
				{
					"type": "burn",
					"maxTicks": 15,
					"collideWith": 65535,
					"packet": {
						"damage": 2.5,
						"lifeSteal": 0,
						"noKnockback": true,
						"noHit": true,
						"isLava": true
					},
					"hitInterval": 120,
					"stack": "volcano",
					"maxStacks": 1,
					"render": {
						"color": "#ff0088",
						"alpha": 0.3,
						"ticks": 30,
						"emissionRadiusFactor": 1,
						"particleRadius": 0.005,
						"shine": 0.2,
						"glow": 0.2
					}
				}
			]
		},
		"healing": {
			"health": 1,
			"hitInterval": 1,
			"decayPerSecond": 0,
			"buffs": [
				{
					"type": "burn",
					"maxTicks": 1,
					"collideWith": 65535,
					"packet": {
						"damage": -10,
						"lifeSteal": 0,
						"noKnockback": true,
						"noHit": true,
						"isLava": true
					},
					"hitInterval": 1,
					"stack": "healing",
					"maxStacks": 1
				}
			]
		},
		"outward": {
			"health": 350,
			"collideWith": 1,
			"render": [
				{
					"type": "solid",
					"color": "rgba(64, 64, 64, 0.25)",
					"deadColor": "rgba(64, 64, 64, 0.1)",
					"glow": 0.2
				},
				{
					"type": "smoke",
					"color": "rgba(255, 255, 255, 0.25)",
					"particleRadius": 0.002,
					"bloom": 0.01,
					"glow": 0.025,
					"vanish": 1,
					"ticks": 45,
					"interval": 6,
					"speed": 0,
					"conveyor": 2
				}
			],
			"conveyor": {
				"radialSpeed": 0.4
			}
		},
		"inward": {
			"health": 121250,
			"collideWith": 1,
			"render": [
				{
					"type": "solid",
					"color": "rgba(64, 64, 64, 0.25)",
					"deadColor": "rgba(64, 64, 64, 0.1)",
					"glow": 0.2
				},
				{
					"type": "smoke",
					"color": "rgba(255, 255, 255, 0.25)",
					"particleRadius": 0.002,
					"bloom": 0.01,
					"glow": 0.025,
					"vanish": 1,
					"ticks": 45,
					"interval": 6,
					"speed": 0,
					"conveyor": 2
				}
			],
			"conveyor": {
				"radialSpeed": -0.4
			}
		}
	},
	"Choices": {
		"Options": {
			"a": [
				[
					"teleport"
				]
			],
			"q": [
				[
					"teleport"
				]
			],
			"w": [
				[
					"teleport"
				]
			],
			"e": [
				[
					"teleport"
				]
			],
			"r": [
				[
					"teleport"
				]
			],
			"f": [
				[
					"teleport"
				]
			],
			"atk": [
				[
					"fireball"
				]
			],
			"atk2": [
				[
					"difire"
				]
			],
			"atk3": [
				[
					"mines"
				]
			],
			"atk4": [
				[
					"meteorite"
				]
			]
		}
	},
	"Spells": {
		"fireball": {
			"action": "spray",
			"color": "#ff00ff",
			"cooldown": 0,
			"projectile": {
				"speed": 1.6,
				"maxTicks": 900,
				"damage": 0,
				"renderers": [],
				"collideWith": 0,
				"selfPassthrough": true,
				"expireOn": 0,
				"behaviours": [
					{
						"type": "spawn",
						"trigger": {
							"atCursor": true
						},
						"projectile": {
							"density": 25,
							"collideWith": 0,
							"radius": 0.003,
							"speed": 0.64,
							"selfPassthrough": true,
							"maxTicks": 100,
							"damage": 0,
							"lifeSteal": 0.3,
							"categories": 2,
							"behaviours": [
								{
									"type": "spawn",
									"trigger": {
										"afterTicks": 2
									},
									"projectile": {
										"density": 25,
										"radius": 0.003,
										"collideWith": 0,
										"speed": 0.64,
										"maxTicks": 100,
										"selfPassthrough": true,
										"damage": 0,
										"lifeSteal": 0.3,
										"categories": 2,
										"soundHit": "standard",
										"color": "#0f8",
										"behaviours": [
											{
												"type": "spawn",
												"trigger": {
													"afterTicks": 25
												},
												"projectile": {
													"density": 25,
													"radius": 0.003,
													"collideWith": 0,
													"speed": 0.64,
													"maxTicks": 100,
													"selfPassthrough": true,
													"damage": 0,
													"lifeSteal": 0.3,
													"behaviours": [
														{
															"type": "spawn",
															"trigger": {
																"afterTicks": 25
															},
															"projectile": {
																"density": 25,
																"radius": 0.003,
																"collideWith": 0,
																"speed": 0.64,
																"maxTicks": 200,
																"selfPassthrough": true,
																"damage": 0,
																"lifeSteal": 0.3,
																"categories": 2,
																"soundHit": "standard",
																"behaviours": [
																	{
																		"type": "spawn",
																		"trigger": {
																			"afterTicks": 25
																		},
																		"projectile": {
																			"density": 25,
																			"radius": 0.003,
																			"collideWith": 0,
																			"speed": 0.02,
																			"maxTicks": 60,
																			"selfPassthrough": true,
																			"damage": 10,
																			"sense": 1,
																			"lifeSteal": 0,
																			"categories": 2,
																			"soundHit": "standard",
																			"color": "#ff00ff",
																			"renderers": [
																				{
																					"type": "bloom",
																					"heroColor": true,
																					"selfColor": true,
																					"radius": 0.045
																				},
																				{
																					"type": "projectile",
																					"ticks": 30,
																					"selfColor": true,
																					"heroColor": true,
																					"smoke": 0.05
																				},
																				{
																					"type": "ray",
																					"heroColor": true,
																					"selfColor": true,
																					"ticks": 30
																				},
																				{
																					"type": "strike",
																					"ticks": 30,
																					"flash": true,
																					"numParticles": 5
																				}
																			],
																			"expireOn": 0
																		},
																		"numProjectiles": 2,
																		"spread": 0.2,
																		"expire": true
																	}
																],
																"color": "#00ffff",
																"renderers": [
																	{
																		"type": "projectile",
																		"ticks": 30,
																		"color": "rgba(100,100,100,0.4)"
																	}
																],
																"expireOn": 0
															},
															"numProjectiles": 2,
															"spread": 2.2,
															"expire": true
														}
													],
													"categories": 2,
													"soundHit": "standard",
													"color": "#0000ff",
													"renderers": [
														{
															"type": "projectile",
															"ticks": 30,
															"color": "rgba(100,100,100,0.4)"
														}
													],
													"expireOn": 0
												},
												"numProjectiles": 2,
												"spread": 1.2,
												"expire": true
											}
										],
										"renderers": [
											{
												"type": "projectile",
												"ticks": 30,
												"color": "rgba(100,100,100,0.4)"
											}
										],
										"expireOn": 0
									},
									"numProjectiles": 1,
									"spread": 0.2,
									"expire": true
								}
							],
							"soundHit": "standard",
							"color": "#8f0",
							"renderers": [
								{
									"type": "projectile",
									"ticks": 30,
									"color": "rgba(100,100,100,0.4)"
								}
							],
							"expireOn": 0
						},
						"numProjectiles": 4,
						"spread": 0.5,
						"expire": true
					}
				]
			},
			"numProjectilesPerTick": 12,
			"intervalTicks": 1,
			"lengthTicks": 1,
			"chargeTicks": 30,
			"jitterRatio": 10.1
		},
		"difire": {
			"color": "#00ffff",
			"cooldown": 0,
			"numProjectilesPerTick": 4,
			"projectile": {
				"lifeSteal": 0,
				"expireAgainstObjects": 0,
				"behaviours": [
					{
						"type": "homing",
						"newSpeed": 0.6,
						"redirect": true,
						"trigger": {
							"afterTicks": 40
						},
						"revolutionsPerSecond": 1,
						"maxTurnProportion": 0.2
					},
					{
						"type": "spawn",
						"trigger": {
							"atCursor": true
						},
						"projectile": {
							"density": 25,
							"radius": 0.003,
							"collideWith": 0,
							"speed": 0.02,
							"maxTicks": 60,
							"selfPassthrough": true,
							"damage": 0,
							"sense": 1,
							"behaviours": [
								{
									"type": "accelerate",
									"maxSpeed": 0.5,
									"accelerationPerSecond": 0.4
								},
								{
									"type": "spawn",
									"trigger": {
										"afterTicks": 45
									},
									"projectile": {
										"density": 25,
										"radius": 0.003,
										"collideWith": 0,
										"speed": 0.02,
										"maxTicks": 60,
										"selfPassthrough": true,
										"damage": 5,
										"sense": 1,
										"behaviours": [
											{
												"type": "accelerate",
												"maxSpeed": 0.8,
												"accelerationPerSecond": 0.4
											}
										],
										"lifeSteal": 0,
										"categories": 2,
										"soundHit": "standard",
										"color": "#00ffff",
										"renderers": [
											{
												"type": "bloom",
												"heroColor": true,
												"selfColor": true,
												"radius": 0.045
											},
											{
												"type": "projectile",
												"ticks": 30,
												"selfColor": true,
												"heroColor": true,
												"smoke": 0.05
											},
											{
												"type": "ray",
												"heroColor": true,
												"selfColor": true,
												"ticks": 30
											},
											{
												"type": "strike",
												"ticks": 30,
												"flash": true,
												"numParticles": 5
											}
										],
										"expireOn": 0
									},
									"numProjectiles": 6,
									"spread": 4,
									"expire": true
								}
							],
							"lifeSteal": 0,
							"categories": 2,
							"soundHit": "standard",
							"color": "#00ffff",
							"renderers": [
								{
									"color": "rgba(100,100,100,0.8)",
									"type": "projectile",
									"ticks": 15,
									"smoke": 0.05,
									"vanish": 1
								}
							],
							"expireOn": 0
						},
						"numProjectiles": 8,
						"spread": 2,
						"expire": true
					}
				],
				"color": "#ffffff",
				"renderers": [
					{
						"color": "rgba(100,100,100,0.8)",
						"type": "projectile",
						"ticks": 15,
						"smoke": 0.05,
						"vanish": 1
					}
				],
				"buffs": [],
				"collideWith": 0
			},
			"chargeTicks": 60
		},
		"meteorite": {
			"action": "spray",
			"color": "#000000",
			"cooldown": 0,
			"projectile": {
				"speed": 1.25,
				"speedDecayPerTick": 0,
				"maxTicks": 101,
				"damage": 5,
				"collideWith": 0,
				"sound": "fireball",
				"renderers": [
					{
						"type": "bloom",
						"radius": 0.04
					},
					{
						"type": "projectile",
						"ticks": 12,
						"shine": 0,
						"smoke": 0.5,
						"color": "rgba(100,100,100,0.5)",
						"fade": "#333"
					},
					{
						"type": "strike",
						"ticks": 12,
						"flash": true,
						"growth": 0.1
					}
				],
				"behaviours": [
					{
						"type": "homing",
						"newSpeed": 0.15,
						"trigger": {
							"afterTicks": 10
						},
						"maxTurnProportion": 0.05
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 10
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 20
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 30
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 40
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 70
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 50
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 60
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"lifesteal": 0,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 80
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"lifesteal": 0,
							"linkable": true,
							"selfPassthrough": true,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 10,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 100
						},
						"projectile": {
							"density": 50,
							"square": true,
							"ccd": false,
							"attractable": false,
							"swappable": true,
							"linkable": true,
							"selfPassthrough": true,
							"lifesteal": 0,
							"radius": 0.0045,
							"speed": 0.6,
							"speedDecayPerTick": 0.5,
							"restitution": 0,
							"minTicks": 1,
							"maxTicks": 30,
							"hitInterval": 120,
							"damage": 5,
							"shieldTakesOwnership": false,
							"categories": 6,
							"collideWith": 0,
							"sense": "65535",
							"expireOn": 0,
							"sound": null,
							"color": "#ff0066",
							"renderers": [
								{
									"type": "bloom",
									"radius": 0.04
								},
								{
									"type": "projectile",
									"ticks": 12,
									"shine": 0,
									"smoke": 0.5,
									"color": "rgba(0,0,0,1)",
									"fade": "#333"
								},
								{
									"type": "strike",
									"ticks": 12,
									"flash": true,
									"growth": 0.1
								}
							]
						},
						"numProjectiles": 2,
						"spread": 10.07,
						"expire": false
					}
				],
				"lifesteal": 0,
				"selfPassthrough": true
			},
			"numProjectilesPerTick": 3,
			"intervalTicks": 1,
			"lengthTicks": 1,
			"chargeTicks": 120,
			"jitterRatio": 1.8
		},
		"mines": {
			"color": "#ffff00",
			"cooldown": 0,
			"intervalTicks": 8,
			"lengthTicks": 41,
			"jitterRatio": 17,
			"projectile": {
				"speed": 1.5,
				"collideWith": 0,
				"sense": 0,
				"expireOn": 0,
				"expireAgainstObjects": 0,
				"conveyable": false,
				"destructible": {
					"$delete": true
				},
				"partialDamage": {
					"initialMultiplier": 1,
					"ticks": 70
				},
				"detonate": {
					"$delete": true
				},
				"behaviours": [
					{
						"type": "homing",
						"maxTurnProportion": 0.02
					},
					{
						"type": "homing",
						"redirect": true,
						"trigger": {
							"afterTicks": 10
						}
					},
					{
						"type": "spawn",
						"trigger": {
							"afterTicks": 10
						},
						"projectile": {
							"density": 1,
							"ccd": false,
							"color": "#ffff00",
							"radius": 0.004,
							"speed": 1.5,
							"maxTicks": 270,
							"minTicks": 270,
							"damage": 2,
							"lifesteal": 0,
							"hitInterval": 1,
							"behaviours": [
								{
									"type": "spawn",
									"trigger": {
										"afterTicks": 10
									},
									"projectile": {
										"density": 1,
										"ccd": false,
										"color": "#ffff00",
										"radius": 0.004,
										"speed": 0.6,
										"maxTicks": 370,
										"minTicks": 10,
										"damage": 2,
										"lifesteal": 0,
										"hitInterval": 1,
										"behaviours": [],
										"categories": 2,
										"collideWith": 0,
										"sense": 65535,
										"expireOn": 0,
										"expireAgainstObjects": 0,
										"conveyable": false,
										"shieldTakesOwnership": false,
										"renderers": [
											{
												"type": "ray",
												"intermediatePoints": true,
												"ticks": 3,
												"selfColor": true,
												"noPartialRadius": true
											}
										]
									},
									"numProjectiles": 12,
									"spread": 1,
									"expire": false
								}
							],
							"categories": 2,
							"collideWith": 0,
							"sense": 65535,
							"expireOn": 0,
							"expireAgainstObjects": 0,
							"conveyable": false,
							"shieldTakesOwnership": false,
							"renderers": [
								{
									"type": "ray",
									"intermediatePoints": true,
									"ticks": 3,
									"selfColor": true,
									"noPartialRadius": true
								}
							]
						},
						"numProjectiles": 3,
						"spread": 4,
						"expire": true
					}
				],
				"renderers": [
					{
						"type": "ray",
						"color": "rgba(100,100,100,0.5)",
						"intermediatePoints": true,
						"ticks": 3,
						"selfColor": true,
						"noPartialRadius": true
					}
				]
			},
			"chargeTicks": 30,
			"numProjectilesPerTick": 1
		},
		"teleport": {
			"range": 0.1,
			"cooldown": 80
		}
	},
	"Layouts": {
		"circle": {
			"$delete": true
		},
		"cold": {
			"numPoints": 0,
			"obstacles": [
				{
					"type": "healing",
					"layoutRadius": 0.2,
					"extent": 0.02,
					"numObstacles": 4,
					"layoutAngleOffsetInRevs": 0.08333333,
					"numPoints": 6
				},
				{
					"type": "volcano",
					"extent": 0.012,
					"layoutRadius": 0,
					"numObstacles": 2,
					"layoutAngleOffsetInRevs": 0.0833333333333,
					"angularWidthInRevs": 0.52
				},
				{
					"type": "outward",
					"layoutRadius": 0.0725,
					"extent": 0.002,
					"numObstacles": 6,
					"layoutAngleOffsetInRevs": 0.1666666666667,
					"angularWidthInRevs": 0.2
				},
				{
					"type": "inward",
					"layoutRadius": 0.4,
					"extent": 0.102,
					"numObstacles": 6,
					"layoutAngleOffsetInRevs": 0.1666666666667,
					"angularWidthInRevs": 0.2
				}
			]
		},
		"octogon": {
			"$delete": true
		},
		"return": {
			"$delete": true
		},
		"double": {
			"$delete": true
		},
		"ring": {
			"$delete": true
		},
		"exit": {
			"$delete": true
		},
		"heal": {
			"$delete": true
		},
		"snowflake": {
			"$delete": true
		},
		"inside5": {
			"$delete": true
		},
		"single": {
			"$delete": true
		},
		"pepper": {
			"$delete": true
		},
		"mirrors": {
			"$delete": true
		},
		"innerStar": {
			"$delete": true
		},
		"mirrorhenge": {
			"$delete": true
		},
		"spiral": {
			"$delete": true
		},
		"triplet": {
			"$delete": true
		},
		"square": {
			"$delete": true
		},
		"surrounded": {
			"$delete": true
		},
		"tripletSwirl": {
			"$delete": true
		}
	},
	"Code": "var center = { x: 0.5, y: 0.5 };\n\nvar CloseEnoughDistance = 0.05;\nvar CloseEnoughRadians = 0.1 * Math.PI;\nvar MissRadius = 0.05;\nvar DodgeRadius = 0.15;\nvar SpellCastIntervalMilliseconds = 4000;\nvar SpellCastJitterMilliseconds = 500;\n\nvar TicksPerSecond = 60;\n\nvar DefaultReactionMilliseconds = 600;\nvar ReactionMillisecondsLookup = { // Change the reaction time on certain spells\n    retarget: 200,\n};\n\nvar alreadyChosenSpells = false;\nvar nextSpell = 0;\n\n// See ai.contracts.ts:\n// input is InputContract - contains information about the current state of the world\n// output is OutputContract - an action you want to take in response to the world \nfunction act(input) {\n    // Want the bot to do nothing? Uncomment the line below (remove the //):\n    // return null;\n\n    var state = input.state;\n    var heroId = input.heroId;\n    var hero = state.heroes[heroId];\n    var cooldowns = input.cooldowns;\n    var settings = input.settings;\n\n    var opponent = findOpponent(state.heroes, heroId);\n    if (!(hero && opponent)) {\n        // Either we're dead, or everyone else is, nothing to do\n        return null;\n    }\n    \n    var action = null;\n    if (state.started) {\n        action =\n            recovery(state, hero, cooldowns)\n\n            || castSpell(state, hero, opponent, cooldowns, settings)\n            || focus(hero, opponent)\n\n            || face(state, hero, opponent)\n    } else {\n        action =\n            chooseSpells(settings)\n\n            || face(state, hero, opponent)\n    }\n\n    if (action) {\n        // Give the bot a reaction time otherwise it is OP\n        var reactionMilliseconds = ReactionMillisecondsLookup[action.spellId] || DefaultReactionMilliseconds;\n        action.delayMilliseconds = reactionMilliseconds;\n        return action;\n    } else {\n        return null;\n    }\n}\n\nfunction chooseSpells(settings) {\n    if (alreadyChosenSpells) {\n        return null;\n    }\n    alreadyChosenSpells = true;\n\n    var spells = randomSpells(settings);\n\n    // Want to test a particular spell? Uncomment and edit the lines below\n    // spells[\"e\"] = \"saber\";\n\n    return { spells };\n}\n\nfunction randomSpells(settings) {\n\tvar keyBindings = {};\n\tvar allOptions = settings.Choices.Options;\n\tfor (var btn in allOptions) { // One of the buttons, e.g. Q or R\n        var options = allOptions[btn];\n\n        var spellIds = [];\n        for (var i = 0; i < options.length; ++i) {\n            var row = options[i];\n            for (var j = 0; j < row.length; ++j) {\n                var spellId = row[j];\n                spellIds.push(spellId);\n            }\n        }\n\n\t\tif (spellIds.length > 1) {\n\t\t\tkeyBindings[btn] = spellIds[Math.floor(Math.random() * spellIds.length)];\n\t\t}\n\t}\n\treturn keyBindings;\n}\n\nfunction findOpponent(heroes, myHeroId) {\n    var myHero = heroes[myHeroId];\n    if (!myHero) {\n        return null;\n    }\n\n    var choice = null;\n    var mostHealth = 0;\n    for (var heroId in heroes) {\n        var hero = heroes[heroId];\n\n        if (!hero.isEnemy) { continue; }\n\n        // Uncomment the line below to only target humans\n         if (hero.isBot) { continue; }\n\n        if (hero.health > mostHealth) {\n            // Target the enemy with the most health\n            mostHealth = hero.health;\n            choice = hero;\n        }\n    }\n    return choice;\n}\n\nfunction recovery(state, hero, cooldowns) {\n    if (hero.inside || state.radius <= 0) {\n        // No need to recover\n        return null;\n    }\n\n    var spellId = null;\n    if (cooldowns[\"teleport\"] === 0) {\n        spellId = \"teleport\";\n    } else if (cooldowns[\"thrust\"] === 0) {\n        spellId = \"thrust\";\n    } else if (cooldowns[\"swap\"] === 0) {\n        spellId = \"swap\";\n    } else if (cooldowns[\"voidRush\"] === 0) {\n        spellId = \"voidRush\";\n    } else if (cooldowns[\"vanish\"] === 0) {\n        spellId = \"vanish\";\n    } else {\n        spellId = \"move\";\n    }\n\n    if (spellId) {\n        return { spellId, target: center };\n    }\n    return null;\n}\n\nfunction deflect(state, hero, cooldowns, projectile) {\n    var target = vectorMidpoint(hero.pos, projectile.pos);\n    var spellId = null;\n    if (cooldowns[\"shield\"] === 0) {\n        spellId = \"shield\";\n    } else if (cooldowns[\"icewall\"] === 0) {\n        spellId = \"icewall\";\n    } else if (cooldowns[\"saber\"] === 0) {\n        spellId = \"saber\";\n    } else if (cooldowns[\"dualSaber\"] === 0) {\n        spellId = \"dualSaber\";\n    } else if (cooldowns[\"meteor\"] === 0) {\n        spellId = \"meteor\";\n    } else if (cooldowns[\"meteorite\"] === 0) {\n        spellId = \"meteorite\";\n    } else if (cooldowns[\"whirlwind\"] === 0) {\n        spellId = \"whirlwind\";\n    } else if (cooldowns[\"phaseOut\"] === 0) {\n        spellId = \"phaseOut\";\n    } else {\n        spellId = null;\n    }\n\n    if (spellId) {\n        return { spellId, target };\n    } else {\n        return null;\n    }\n}\n\nfunction castSpell(state, hero, opponent, cooldowns, settings) {\n    if (!readyForNextSpell(hero)) {\n        return null;\n    }\n\n    var candidates = [];\n    for (var spellId in cooldowns) {\n        var readyToCast = !cooldowns[spellId];\n        var spell = settings.Spells[spellId];\n\n        if (spell\n            && readyToCast\n            && validAttack(state, hero, opponent, spell)) {\n\n            candidates.push(spellId);\n        }\n    }\n\n    if (candidates.length > 0) {\n        var spellId = candidates[Math.floor(Math.random() * candidates.length)];\n        var action = { spellId, target: jitter(opponent.pos, MissRadius) };\n        if (action.spellId === spellId) {\n            updateNextSpellTime();\n        }\n        return action;\n    } else {\n        return null;\n    }\n}\n\nfunction validAttack(state, hero, opponent, spell) {\n    var opponentShielded = !!opponent.shieldTicksRemaining;\n\n    var distance = vectorDistance(hero.pos, opponent.pos);\n    if (spell.action === \"projectile\" || spell.action === \"spray\" || spell.action === \"retractor\" || spell.action === \"focus\" || spell.action === \"charge\") {\n        if (spell.projectile.swapWith) { // Swap doesn't work as an attack\n            return false;\n        }\n        if (opponentShielded && !spell.projectile.detonate) { // Detonate spells can penetrate shields, nothing else can\n            return false;\n        }\n        if (spell.id === \"whip\") {\n            // Just keep casting Electroshock even if out of range\n            return true;\n        }\n\n        var range = spell.projectile.speed * spell.projectile.maxTicks / TicksPerSecond + opponent.radius;\n        return distance <= range;\n    } else if (spell.action === \"scourge\") {\n        var range = spell.radius + opponent.radius;\n        return distance <= range;\n    } else if (spell.id === \"blaze\") {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction readyForNextSpell(hero) {\n    return (\n        Date.now() >= nextSpell // Don't cast too fast\n        || !!hero.link // If linked to something, cast as many spells as possible\n    );\n}\n\nfunction updateNextSpellTime() {\n    nextSpell = Date.now() + SpellCastIntervalMilliseconds + Math.floor((Math.random() < 0.5 ? -1 : 1) * Math.random() * SpellCastJitterMilliseconds);\n}\n\nfunction jitter(target, missRadius) {\n    var radius = Math.random() * missRadius;\n    var angle = Math.random() * 2 * Math.PI;\n    return {\n        x: target.x + radius * Math.cos(angle),\n        y: target.y + radius * Math.sin(angle),\n    };\n}\n\nfunction focus(hero, opponent) { // When using a spell (e.g. Acolyte Beam, Spirit Missile) - ensure we are focusing the enemy, otherwise we will miss\n    if (hero.casting) {\n        if (hero.casting.spellId === \"blast\" || hero.casting.spellId === \"retractor\" || hero.casting.spellId === \"rocket\") {\n            // Have to release or it won't fire\n            return { spellId: hero.casting.spellId, release: true, target: opponent.pos };\n        } else if (hero.casting.spellId === \"saber\" || hero.casting.spellId === \"dualSaber\") {\n            // Don't focus the lightsaber, just swish it around\n            return { spellId: \"retarget\", target: vectorPlus(hero.pos, vectorFromAngle(hero.heading + Math.PI / 2)) };\n        } else if (hero.casting.spellId === \"grapple\") {\n            // Throw away to the right (TODO: be smarter about this)\n            return { spellId: hero.casting.spellId, release: true, target: vectorPlus(hero.pos, vectorFromAngle(hero.heading + Math.PI / 2)) };\n        } else if (hero.casting.spellId === \"halo\") {\n            return { spellId: \"move\", target: opponent.pos };\n        } else {\n            return { spellId: \"retarget\", target: opponent.pos };\n        }\n    } else {\n        return null;\n    }\n}\n\nfunction chase(state, hero, cooldowns, opponent) {\n    if (\"whip\" in cooldowns) {\n        // Got to get within range when using Electroshock\n        var target = vectorMidpoint(hero.pos, opponent.pos);\n        return { spellId: \"move\", target };\n    } else {\n        return null;\n    }\n}\n\nfunction move(state, hero) {\n    var centroid = { x: 0, y: 0 };\n    var numOpponents = 0;\n    for (var heroId in state.heroes) {\n        if (heroId === hero.id) {\n            continue; // Ignore self\n        }\n\n        var opponent = state.heroes[heroId];\n        centroid.x += opponent.pos.x;\n        centroid.y += opponent.pos.y;\n\n        ++numOpponents;\n    }\n    centroid.x /= numOpponents;\n    centroid.y /= numOpponents;\n\n    if (!numOpponents) {\n        return;\n    }\n\n    var offset = vectorNegate(vectorDiff(centroid, center)); // Move to the opposite side of the arena\n    var targetDistance = state.radius * 0.33; // Closer to center than edge (for polygonal maps)\n    var target = vectorPlus(center, vectorRelengthen(offset, targetDistance));\n\n    var distanceToTarget = vectorDistance(hero.pos, target);\n    if (distanceToTarget <= CloseEnoughDistance) {\n        // Close enough - don't send any action so the game can sleep while waiting for players\n        return null;\n    }\n\n    return { spellId: \"move\", target };\n}\n\nfunction face(state, hero, opponent) {\n    var target = opponent.pos;\n    var targetAngle = vectorAngle(vectorDiff(opponent.pos, hero.pos));\n    var angleDelta = vectorAngleDelta(hero.heading, targetAngle);\n    if (Math.abs(angleDelta) <= CloseEnoughRadians) {\n        return null;\n    }\n\n    return { spellId: \"retarget\", target };\n}\n\nfunction dodge(state, hero, cooldowns) {\n    for (var projectileId in state.projectiles) {\n        var projectile = state.projectiles[projectileId];\n        if (projectile.ownerId === hero.id) {\n            // This is my own projectile\n            continue;\n        }\n\n        if (projectile.spellId === \"halo\") {\n            // Halo is never coming for us, it orbits around its owner\n            continue;\n        }\n\n        var diff = vectorDiff(hero.pos, projectile.pos);\n        var distancePerTimeStep = vectorDot(projectile.velocity, vectorUnit(diff));\n        if (distancePerTimeStep <= 0) {\n            // Not coming towards us\n            continue;\n        }\n\n        var timeToCollision = vectorLength(diff) / distancePerTimeStep;\n        if (timeToCollision <= 0 || timeToCollision >= 30) {\n            // Not coming towards us or too far away\n            continue;\n        }\n\n        var collisionPoint = vectorPlus(projectile.pos, vectorMultiply(projectile.velocity, timeToCollision));\n        var distanceToCollision = vectorDistance(collisionPoint, hero.pos);\n        var dodgeRadius = Math.max(DodgeRadius, projectile.radius) + hero.radius;\n        if (distanceToCollision > dodgeRadius) {\n            // Won't hit us\n            continue;\n        }\n\n        var deflectAction = deflect(state, hero, cooldowns, projectile);\n        if (deflectAction) {\n            return deflectAction;\n        }\n\n        // Run away from collision point\n        var direction = vectorUnit(vectorNegate(vectorDiff(collisionPoint, hero.pos)));\n        var step = vectorMultiply(direction, dodgeRadius);\n        var target = vectorPlus(hero.pos, step);\n        return { spellId: \"move\", target };\n    }\n    return null;\n}\n\nfunction vectorDiff(to, from) {\n    return { x: to.x - from.x, y: to.y - from.y };\n}\n\nfunction vectorLength(vector) {\n    return Math.sqrt(vector.x * vector.x + vector.y * vector.y);\n}\n\nfunction vectorDistance(from, to) {\n    return vectorLength(vectorDiff(from, to));\n}\n\nfunction vectorUnit(vec) {\n    var length = vectorLength(vec);\n    return length === 0 ? vec : vectorMultiply(vec, 1 / length);\n}\n\nfunction vectorPlus(from, offset) {\n    return { x: from.x + offset.x, y: from.y + offset.y };\n}\n\nfunction vectorMultiply(vec, multiplier) {\n    return { x: vec.x * multiplier, y: vec.y * multiplier };\n}\n\nfunction vectorRelengthen(vec, length) {\n    return vectorMultiply(vectorUnit(vec), length);\n}\n\nfunction vectorNegate(vec) {\n    return vectorMultiply(vec, -1);\n}\n\nfunction vectorDot(a, b) {\n    return (a.x * b.x) + (a.y * b.y);\n}\n\nfunction vectorMidpoint(a, b) {\n    var diff = vectorDiff(b, a);\n    return vectorPlus(a, vectorMultiply(diff, 0.5));\n}\n\nfunction vectorFromAngle(angle) {\n\treturn { x: Math.cos(angle), y: Math.sin(angle) };\n}\n\nfunction vectorAngle(vec) {\n    return Math.atan2(vec.y, vec.x);\n}\n\nfunction vectorAngleDelta(currentAngle, targetAngle) {\n\tvar delta = targetAngle - currentAngle;\n\twhile (delta > Math.PI) {\n\t\tdelta -= 2 * Math.PI;\n\t}\n\twhile (delta < -Math.PI) {\n\t\tdelta += 2 * Math.PI;\n\t}\n\treturn delta;\n}\n\n// See ai.contracts.ts: Must return a BotContract\nreturn { act };"
}